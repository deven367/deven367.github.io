<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Deven Mistry</title>
<link>https://github.com/deven367/blog/til.html</link>
<atom:link href="https://github.com/deven367/blog/til.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Tue, 15 Nov 2022 00:00:00 GMT</lastBuildDate>
<item>
  <title>Learning from pkl files</title>
  <dc:creator>Deven Mistry</dc:creator>
  <link>https://github.com/deven367/blog/TIL/learning-from-pkl-files.html</link>
  <description><![CDATA[ 




<p>When we train a model using <code>fastai</code> and export it using <code>learn.export</code>, you need to re-declare the functions that you had used to train the model.</p>
<p>Let me show you what I mean by that,</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">from</span> fastai.vision.<span class="bu" style="color: null;">all</span> <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb1-2">set_seed(<span class="dv" style="color: #AD0000;">99</span>, <span class="va" style="color: #111111;">True</span>)</span>
<span id="cb1-3">path <span class="op" style="color: #5E5E5E;">=</span> untar_data(URLs.PETS)<span class="op" style="color: #5E5E5E;">/</span><span class="st" style="color: #20794D;">'images'</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;">def</span> label_func(x): <span class="cf" style="color: #003B4F;">return</span> x[<span class="dv" style="color: #AD0000;">0</span>].isupper()</span>
<span id="cb1-6"></span>
<span id="cb1-7">dls <span class="op" style="color: #5E5E5E;">=</span> ImageDataLoaders.from_name_func(</span>
<span id="cb1-8">    path, get_image_files(path), valid_pct<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.2</span>,</span>
<span id="cb1-9">    label_func<span class="op" style="color: #5E5E5E;">=</span>label_func, item_tfms<span class="op" style="color: #5E5E5E;">=</span>Resize(<span class="dv" style="color: #AD0000;">224</span>))</span>
<span id="cb1-10"></span>
<span id="cb1-11">learn <span class="op" style="color: #5E5E5E;">=</span> vision_learner(dls, resnet34, metrics<span class="op" style="color: #5E5E5E;">=</span>error_rate)</span>
<span id="cb1-12">learn.fine_tune(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-13">learn.export(<span class="st" style="color: #20794D;">'saved-model.pkl'</span>)</span></code></pre></div>
<p>Here, we are training a simple model for image classification and then exporting the saved model.</p>
<p>Now, if you were to use this model in a different jupyter notebook or a py file using the <code>load_learner</code> function.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;">from</span> fastai.vision.<span class="bu" style="color: null;">all</span> <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb2-2">learn <span class="op" style="color: #5E5E5E;">=</span> load_learner(<span class="st" style="color: #20794D;">'saved-model.pkl'</span>)</span></code></pre></div>
<p>You would get an error something like this…</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="op" style="color: #5E5E5E;">---------------------------------------------------------------------------</span></span>
<span id="cb3-2"><span class="pp" style="color: #AD0000;">AttributeError</span>                            Traceback (most recent call last)</span>
<span id="cb3-3"><span class="op" style="color: #5E5E5E;">&lt;</span>ipython<span class="op" style="color: #5E5E5E;">-</span><span class="bu" style="color: null;">input</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">-</span>c010bc50794d<span class="op" style="color: #5E5E5E;">&gt;</span> <span class="kw" style="color: #003B4F;">in</span> <span class="op" style="color: #5E5E5E;">&lt;</span>module<span class="op" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb3-4"><span class="op" style="color: #5E5E5E;">----&gt;</span> <span class="dv" style="color: #AD0000;">1</span> learn <span class="op" style="color: #5E5E5E;">=</span> load_learner(<span class="st" style="color: #20794D;">'saved-model.pkl'</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="dv" style="color: #AD0000;">3</span> frames</span>
<span id="cb3-7"><span class="op" style="color: #5E5E5E;">/</span>usr<span class="op" style="color: #5E5E5E;">/</span>local<span class="op" style="color: #5E5E5E;">/</span>lib<span class="op" style="color: #5E5E5E;">/</span>python3<span class="fl" style="color: #AD0000;">.7</span><span class="op" style="color: #5E5E5E;">/</span>dist<span class="op" style="color: #5E5E5E;">-</span>packages<span class="op" style="color: #5E5E5E;">/</span>torch<span class="op" style="color: #5E5E5E;">/</span>serialization.py <span class="kw" style="color: #003B4F;">in</span> find_class(<span class="va" style="color: #111111;">self</span>, mod_name, name)</span>
<span id="cb3-8">   <span class="dv" style="color: #AD0000;">1040</span>                     <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb3-9">   <span class="dv" style="color: #AD0000;">1041</span>             mod_name <span class="op" style="color: #5E5E5E;">=</span> load_module_mapping.get(mod_name, mod_name)</span>
<span id="cb3-10"><span class="op" style="color: #5E5E5E;">-&gt;</span> <span class="dv" style="color: #AD0000;">1042</span>             <span class="cf" style="color: #003B4F;">return</span> <span class="bu" style="color: null;">super</span>().find_class(mod_name, name)</span>
<span id="cb3-11">   <span class="dv" style="color: #AD0000;">1043</span></span>
<span id="cb3-12">   <span class="dv" style="color: #AD0000;">1044</span>     <span class="co" style="color: #5E5E5E;"># Load the data (which may in turn use `persistent_load` to load tensors)</span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="pp" style="color: #AD0000;">AttributeError</span>: Custom classes <span class="kw" style="color: #003B4F;">or</span> functions exported <span class="cf" style="color: #003B4F;">with</span> your `Learner` <span class="kw" style="color: #003B4F;">not</span> available <span class="kw" style="color: #003B4F;">in</span> namespace.\Re<span class="op" style="color: #5E5E5E;">-</span>declare<span class="op" style="color: #5E5E5E;">/</span><span class="im" style="color: #00769E;">import</span> before loading:</span>
<span id="cb3-15">    Can<span class="st" style="color: #20794D;">'t get attribute '</span>label_func<span class="st" style="color: #20794D;">' on &lt;module '</span>__main__<span class="st" style="color: #20794D;">'&gt;</span></span></code></pre></div>
<p>This error is essentially saying that, before you load your model, the script (py file) or the notebook is looking for the function <code>label_func</code>.</p>
<p>Previously, I would just copy that whole function again from the previous file and paste it in my new file, something like this.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;">from</span> fastai.vision.<span class="bu" style="color: null;">all</span> <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;">def</span> label_func(x): <span class="cf" style="color: #003B4F;">return</span> x[<span class="dv" style="color: #AD0000;">0</span>].isupper()</span>
<span id="cb4-3"></span>
<span id="cb4-4">learn <span class="op" style="color: #5E5E5E;">=</span> load_learner(<span class="st" style="color: #20794D;">'saved-model.pkl'</span>)</span></code></pre></div>
<p>But, as it turns out, the <code>load_learner</code> is just looking for a reference to the <code>label_func</code> and not it’s entire definition. So, in theory, you could have your code look something like…</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">from</span> fastai.vision.<span class="bu" style="color: null;">all</span> <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;">## notice the empty function declaration</span></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;">def</span> label_func(x): <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb5-5"></span>
<span id="cb5-6">learn <span class="op" style="color: #5E5E5E;">=</span> load_learner(<span class="st" style="color: #20794D;">'saved-model.pkl'</span>)</span></code></pre></div>
<p>With this declaration, your inference would work just fine and you won’t get any problems.</p>
<div class="callout-note callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Use this method only, when you wish to do <code>inference</code> with your model. <br> If you wish to re-train the model, you would need a new <code>dataloader</code>, <code>label_func</code> and the whole nine-yards.</p>
</div>
</div>
<p>I hope this was helpful. Happy Learning. Cheers!</p>



 ]]></description>
  <category>pkl</category>
  <category>pytorch</category>
  <category>fastai</category>
  <guid>https://github.com/deven367/blog/TIL/learning-from-pkl-files.html</guid>
  <pubDate>Tue, 15 Nov 2022 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
